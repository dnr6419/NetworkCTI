source s_suricata {
 file("/var/log/suricata/fast.log"
 program-override("suricata"));
 };


python {
import re

class SngResolver(object):
    def parse(self, log_message):

        self.outfile = open("/tmp/log/example.txt","a")
        self.outfile.write("DEBUG = %s\n" % log_message.__doc__)
        self.outfile.write("MESSAGE = %s\n" % log_message["MESSAGE"])
        # 35:36.374676  [**] [1:41007:0] [Test] anything [**] [Classification: (null)] [Priority: 3] {TCP} 192.168.56.103:80 -> 192.168.56.1:63609
        msg = log_message["MESSAGE"] 
        ip_list = re.findall(r'\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b',msg)
        src_host = ip_list[0]
        dst_host = ip_list[1]
        
        self.outfile.write("src_host = %s\n" % src_host)
        self.outfile.write("dst_host = %s\n" % dst_host)
        self.outfile.write("type = %s\n" % type(log_message))
        self.outfile.write("msg_type = %s\n" % type(msg))
        self.outfile.write("b_msg = %s\n" % msg)
        

        # geoip를 이용해서 한국 ip만 parsing 

        msg = msg.replace(src_host,"0ppr2s")
        msg = msg.replace(dst_host,"fresh")
        self.outfile.write("a_msg = %s\n" % msg)
        log_message["MESSAGE"] = msg





        self.outfile.flush()
        self.outfile.close()
    
        # try to resolve the IP address
        try:
            resolved = socket.gethostbyaddr(ipaddr)
            hostname = resolved[0]
            log_message['hostname.dest'] = hostname
        except:
            pass

        # return True, other way message is dropped
        return True

};

parser p_resolver {
    python(
        class("SngResolver")
    );
};


log { 
    source(s_src); 
    parser(p_resolver); 
    destination(d_ppp); 
};

log {
  source(s_suricata);
  parser(p_resolver);
  # rewrite(pseudonymize_ip_addresses_in_message)
  destination(d_syslog);
};

log { source(s_src); filter(f_local5); destination(logserver_elsa); };



# S200으로 나가는 syslog 형식 
# Jun  9 09:15:56 YNC-HN-WINS MSS200-10004[1537]: [1:510066:1] Telnet Service Sweep [Classification: Reconnaissance] [Priority: 3] {TCP} 8.140.144.40:15789 -> 211.170.162.154:2

# Jun  9 09:03:33 0ppr2s suricata: 03:32.125758  [**] [1:41007:0] [Test] anything [**] [Classification: (null)] [Priority: 3] {TCP} 0ppr2s:22 -> fresh:53707

# Jun  9 09:33:46 0ppr2s 06/09/2021-00:33:45.837442  [**] [1:41007:0] [Test] anything [**] [Classification: (null)] [Priority: 3] {TCP} 0ppr2s:80 -> fresh:62928


*syslog-ng Open Source Edition 3.19 부터 python 2.7 ~ python 3.4를 호환하고 있다. 


syslog-ng 3 (3.13.2)
Config version: 3.13
Installer-Version: 3.13.2
Revision: 3.13.2-3

#  syslog-ng --syntax-only


현재 영남이공대 ubuntu version 16.04 LTS
현재 SKB       ubuntu version 16.04 LTS

신규 허니넷을 구축하려면 ubuntu 18.04 LTS 운영체제 필요함. 

# syslog version update on ubuntu 16.04 LTS

syslog-ng 3.13 install on ubuntu 16.04 LTS

# ubuntu 16.04 LTS syslog-ng update 

apt-get install -y gcc python pkg-config glib-2.0 libglib2.0-dev 
apt-get install -y autoconf-archive autoconf build-essential libtool bison flex
git clone -b 3.13/master https://github.com/syslog-ng/syslog-ng.git

./autogen.sh
mkdir build && cd build
../configure -enable-extra-warnings -prefix=$HOME/install/syslog-ng && make && make install
cp ./build/lib/.libs/* /usr/lib

# geoip .dat filedownload
git clone https://github.com/mbcc2006/GeoLiteCity-data.git (2 years ago)

import pygeoip          #IP 국가코드 확인작업을 위해서 필요(GeoIP 사용시) 

#GeoIP로 조회하는 방법
geo = pygeoip.GeoIP('GeoLiteCity.dat')     #다운받은 DB파일 참조
IP = 'x.x.x.x'

ip_info = geo.record_by_name(IP)            
city = ip_info['city']                              
country = ip_info['country_code']
      

# 출처: https://rielouo.tistory.com/13 [RieloUo]